{
    "sourceFile": "qrcheck-frontend/src/services/api.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754529032036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754569307172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,34 @@\n // src/services/api.js\r\n-import axios from 'axios'\r\n+import axios from 'axios';\r\n \r\n-const api = axios.create({ baseURL: import.meta.env.VITE_API_BASE_URL || '/api', withCredentials: true })\r\n+const api = axios.create({\r\n+  baseURL: import.meta.env.VITE_API_BASE_URL || '/api',\r\n+  timeout: 10000,\r\n+  headers: { 'Content-Type': 'application/json' },\r\n+  withCredentials: true,\r\n+});\r\n \r\n-// injeta token\r\n+// ── Interceptor de requisição: injeta o token JWT ─────────────────────────\r\n api.interceptors.request.use(config => {\r\n-  const token = localStorage.getItem('access_token')\r\n-  if (token) config.headers.Authorization = `Bearer ${token}`\r\n-  return config\r\n-})\r\n+  const token = localStorage.getItem('access_token');\r\n+  if (token) {\r\n+    config.headers.Authorization = `Bearer ${token}`;\r\n+  }\r\n+  return config;\r\n+});\r\n \r\n-// redireciona 401\r\n+// ── Interceptor de resposta: trata 401 Unauthorized ───────────────────────\r\n api.interceptors.response.use(\r\n-  res => res,\r\n-  err => {\r\n-    if (err.response?.status === 401) {\r\n-      localStorage.removeItem('access_token')\r\n-      window.location.href = '/login'  // força ir ao login\r\n-      return\r\n+  response => response,\r\n+  error => {\r\n+    if (error.response?.status === 401) {\r\n+      // Remove token e redireciona para login\r\n+      localStorage.removeItem('access_token');\r\n+      window.location.href = '/login';\r\n+      return;\r\n     }\r\n-    return Promise.reject(err)\r\n+    return Promise.reject(error);\r\n   }\r\n-)\r\n+);\r\n \r\n-export default api\r\n+export default api;\r\n"
                }
            ],
            "date": 1754529032036,
            "name": "Commit-0",
            "content": "// src/services/api.js\r\nimport axios from 'axios'\r\n\r\nconst api = axios.create({ baseURL: import.meta.env.VITE_API_BASE_URL || '/api', withCredentials: true })\r\n\r\n// injeta token\r\napi.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('access_token')\r\n  if (token) config.headers.Authorization = `Bearer ${token}`\r\n  return config\r\n})\r\n\r\n// redireciona 401\r\napi.interceptors.response.use(\r\n  res => res,\r\n  err => {\r\n    if (err.response?.status === 401) {\r\n      localStorage.removeItem('access_token')\r\n      window.location.href = '/login'  // força ir ao login\r\n      return\r\n    }\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default api\r\n"
        }
    ]
}