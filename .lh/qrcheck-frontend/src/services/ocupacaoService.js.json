{
    "sourceFile": "qrcheck-frontend/src/services/ocupacaoService.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754575069571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754575069569,
            "name": "Commit-0",
            "content": "// src/services/ocupacaoService.js\r\nimport api from './api';\r\n\r\n/**\r\n * Busca todas as ocupações cadastradas.\r\n * GET /ocupacoes\r\n * @returns {Promise<Array<{ id: number; nome: string }>>}\r\n */\r\nexport const listarOcupacoes = async () => {\r\n  try {\r\n    const response = await api.get('/ocupacoes');\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('❌ Erro ao listar ocupações:', err.response?.data || err.message);\r\n    throw err;\r\n  }\r\n};\r\n\r\n/**\r\n * Cria uma nova ocupação.\r\n * POST /ocupacoes\r\n * @param {{ nome: string }} data\r\n */\r\nexport const criarOcupacao = async (data) => {\r\n  try {\r\n    const response = await api.post('/ocupacoes', data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('❌ Erro ao criar ocupação:', err.response?.data || err.message);\r\n    throw err;\r\n  }\r\n};\r\n\r\n/**\r\n * Atualiza uma ocupação existente.\r\n * PATCH /ocupacoes/:id\r\n * @param {number} id\r\n * @param {{ nome?: string }} data\r\n */\r\nexport const atualizarOcupacao = async (id, data) => {\r\n  try {\r\n    const response = await api.patch(`/ocupacoes/${id}`, data);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(`❌ Erro ao atualizar ocupação ${id}:`, err.response?.data || err.message);\r\n    throw err;\r\n  }\r\n};\r\n\r\n/**\r\n * Remove uma ocupação.\r\n * DELETE /ocupacoes/:id\r\n * @param {number} id\r\n */\r\nexport const removerOcupacao = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/ocupacoes/${id}`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(`❌ Erro ao remover ocupação ${id}:`, err.response?.data || err.message);\r\n    throw err;\r\n  }\r\n};\r\n"
        }
    ]
}