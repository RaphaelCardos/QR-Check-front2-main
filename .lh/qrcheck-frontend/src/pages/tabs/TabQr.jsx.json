{
    "sourceFile": "qrcheck-frontend/src/pages/tabs/TabQr.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754526958554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754615713837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n // src/components/Tabs/TabQr.jsx\r\n import React, { useState, useEffect, useCallback } from 'react';\r\n import QRCode from 'qrcode';\r\n import { getParticipantePerfil } from '../../services/participanteService';\r\n+import { getParticipantePerfil } from '../../services/participanteService';\r\n \r\n export default function TabQr() {\r\n   const [participante, setParticipante] = useState(null);\r\n   const [qrUrl, setQrUrl] = useState('');\r\n"
                }
            ],
            "date": 1754526958553,
            "name": "Commit-0",
            "content": "// src/components/Tabs/TabQr.jsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport QRCode from 'qrcode';\r\nimport { getParticipantePerfil } from '../../services/participanteService';\r\n\r\nexport default function TabQr() {\r\n  const [participante, setParticipante] = useState(null);\r\n  const [qrUrl, setQrUrl] = useState('');\r\n  const [loading, setLoading] = useState({ perfil: false, qr: false });\r\n  const [error, setError] = useState('');\r\n\r\n  const carregarPerfil = useCallback(async () => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (!token) {\r\n      setError('Voc√™ n√£o est√° autenticado. Fa√ßa login para continuar.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setError('');\r\n      setLoading({ perfil: true, qr: false });\r\n      console.log('üîç Carregando perfil do participante...');\r\n\r\n      const data = await getParticipantePerfil();\r\n      console.log('‚úÖ Perfil carregado:', data);\r\n      setParticipante(data);\r\n    } catch (err) {\r\n      console.error('‚ùå Erro ao carregar perfil:', err);\r\n      setError(err.message || 'Erro ao carregar perfil');\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, perfil: false }));\r\n    }\r\n  }, []);\r\n\r\n  const gerarQrCode = useCallback(async () => {\r\n    if (!participante) return;\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(prev => ({ ...prev, qr: true }));\r\n      console.log('üì± Gerando QR code para:', participante.id_public);\r\n\r\n      const payload = JSON.stringify({\r\n        id_public: participante.id_public,\r\n        nome: participante.nome,\r\n        sobrenome: participante.sobrenome,\r\n        timestamp: new Date().toISOString(),\r\n      });\r\n\r\n      const url = await QRCode.toDataURL(payload, {\r\n        width: 300,\r\n        margin: 2,\r\n        color: {\r\n          dark: '#000000',\r\n          light: '#FFFFFF',\r\n        },\r\n      });\r\n\r\n      console.log('‚úÖ QR code gerado');\r\n      setQrUrl(url);\r\n    } catch (err) {\r\n      console.error('‚ùå Erro ao gerar QR code:', err);\r\n      setError(err.message || 'Erro ao gerar QR code');\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, qr: false }));\r\n    }\r\n  }, [participante]);\r\n\r\n  useEffect(() => {\r\n    carregarPerfil();\r\n  }, [carregarPerfil]);\r\n\r\n  useEffect(() => {\r\n    if (participante) {\r\n      gerarQrCode();\r\n    }\r\n  }, [participante, gerarQrCode]);\r\n\r\n  const retry = () => {\r\n    setError('');\r\n    setQrUrl('');\r\n    setParticipante(null);\r\n    carregarPerfil();\r\n  };\r\n\r\n  const downloadQRCode = () => {\r\n    if (!qrUrl || !participante) return;\r\n    const link = document.createElement('a');\r\n    link.href = qrUrl;\r\n    link.download = `qr-${participante.nome}-${participante.sobrenome}.png`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n  };\r\n\r\n  // Estados de loading/erro\r\n  if (loading.perfil) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center min-h-[300px]\">\r\n        <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-green-600\" />\r\n        <p className=\"mt-4 text-gray-600\">Carregando perfil...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-6 text-center\">\r\n        <p className=\"text-red-600 font-semibold mb-4\">{error}</p>\r\n        <button\r\n          onClick={retry}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n        >\r\n          Tentar Novamente\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Quando perfil carregado, mas QR ainda est√° gerando\r\n  if (!qrUrl || loading.qr) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center min-h-[300px]\">\r\n        <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-blue-600\" />\r\n        <p className=\"mt-4 text-gray-600\">\r\n          {loading.qr ? 'Gerando QR code...' : 'Preparando QR code...'}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Tela final com QR\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-6\">\r\n      <h2 className=\"text-2xl font-bold text-center mb-4\">Seu QR Code</h2>\r\n\r\n      <div className=\"flex justify-center mb-6\">\r\n        <img\r\n          src={qrUrl}\r\n          alt={`QR code de ${participante.nome}`}\r\n          className=\"w-64 h-64 border rounded-lg shadow\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"text-center mb-6\">\r\n        <p className=\"text-gray-700\">\r\n          <span className=\"font-medium\">Nome:</span> {participante.nome}{' '}\r\n          {participante.sobrenome}\r\n        </p>\r\n        <p className=\"text-gray-700\">\r\n          <span className=\"font-medium\">ID p√∫blico:</span>{' '}\r\n          {participante.id_public.slice(0, 8)}‚Ä¶\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"space-y-3\">\r\n        <button\r\n          onClick={downloadQRCode}\r\n          className=\"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700\"\r\n        >\r\n          Baixar QR Code\r\n        </button>\r\n        <button\r\n          onClick={() => window.print()}\r\n          className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Imprimir QR Code\r\n        </button>\r\n      </div>\r\n\r\n      <p className=\"mt-6 text-xs text-gray-500 text-center\">\r\n        Importante: mantenha seu QR code seguro e apresente-o nos eventos para\r\n        facilitar o check-in.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}