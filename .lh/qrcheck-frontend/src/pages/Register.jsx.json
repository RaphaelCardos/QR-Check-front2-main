{
    "sourceFile": "qrcheck-frontend/src/pages/Register.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1754530574198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754531849507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,11 +20,11 @@\n     senha: \"\",\r\n     confirmarSenha: \"\"\r\n   });\r\n   const [temNecessidade, setTemNecessidade] = useState(false);\r\n-  const [loading, setLoading]           = useState(false);\r\n-  const [error, setError]               = useState(\"\");\r\n-  const [fieldErrors, setFieldErrors]   = useState({});\r\n+  const [loading, setLoading]         = useState(false);\r\n+  const [error, setError]             = useState(\"\");\r\n+  const [fieldErrors, setFieldErrors] = useState({});\r\n \r\n   const handleInputChange = e => {\r\n     const { name, value } = e.target;\r\n     setFormData(prev => ({ ...prev, [name]: value }));\r\n@@ -68,43 +68,43 @@\n         cpf: formData.cpf,\r\n         email: formData.email,\r\n         senha: formData.senha,\r\n         data_nasc: formData.nascimento,\r\n-        ocupacao_id: 1,\r\n+        ocupacao_id: formData.ocupacao || 1,\r\n         necessidades_especificas: temNecessidade ? [1] : []\r\n       });\r\n \r\n       navigate(\"/login\");\r\n     } catch (err) {\r\n       console.error(\"Erro detalhado:\", err);\r\n \r\n-      // Se vier fieldErrors do service\r\n       if (Array.isArray(err.fieldErrors)) {\r\n         const errs = {};\r\n         err.fieldErrors.forEach(({ field, message }) => {\r\n-          // mapeia field nomes de backend para names do form\r\n-          if (field === \"data_nasc\") field = \"nascimento\";\r\n-          errs[field] = message;\r\n+          const key = field === \"data_nasc\" ? \"nascimento\" : field;\r\n+          errs[key] = message;\r\n         });\r\n         setFieldErrors(errs);\r\n       } else {\r\n-        // mensagem geral\r\n-        setError(err.response?.data?.detail?.[0]?.msg || err.message || \"Erro ao cadastrar\");\r\n+        const detailMsg = err.response?.data?.detail?.[0]?.msg;\r\n+        setError(detailMsg || err.message || \"Erro ao cadastrar\");\r\n       }\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div className=\"min-h-screen flex flex-col bg-white relative\">\r\n+      {/* Fundo */}\r\n       <div className=\"absolute inset-0 z-0\">\r\n         <div\r\n           className=\"w-full h-full opacity-90 bg-repeat-y bg-center bg-cover\"\r\n           style={{ backgroundImage: `url(${pattern})` }}\r\n         />\r\n       </div>\r\n \r\n+      {/* Conteúdo */}\r\n       <div className=\"flex flex-1 items-center justify-center z-20\">\r\n         <div className=\"bg-white p-6 md:p-8 rounded-xl shadow-lg w-full max-w-3xl\">\r\n           <div className=\"flex justify-center mb-6\">\r\n             <img src={logo} alt=\"QRCheck Logo\" className=\"h-8 md:h-10\" />\r\n@@ -207,9 +207,11 @@\n                   fieldErrors.nascimento ? \"border-red-500\" : \"\"\r\n                 }`}\r\n               />\r\n               {fieldErrors.nascimento && (\r\n-                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.nascimento}</p>\r\n+                <p className=\"text-red-600 text-sm mt-1\">\r\n+                  {fieldErrors.nascimento}\r\n+                </p>\r\n               )}\r\n             </div>\r\n \r\n             {/* Senha */}\r\n@@ -251,12 +253,9 @@\n               <label className=\"block text-sm mb-1\">Ocupação</label>\r\n               <select\r\n                 name=\"ocupacao\"\r\n                 value={formData.ocupacao}\r\n-                onChange={e => {\r\n-                  handleInputChange(e);\r\n-                  setOcupacao(e.target.value);\r\n-                }}\r\n+                onChange={handleInputChange}\r\n                 required\r\n                 className=\"w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n               >\r\n                 <option value=\"\">Selecione...</option>\r\n@@ -267,9 +266,11 @@\n             </div>\r\n \r\n             {/* Necessidades Específicas */}\r\n             <div>\r\n-              <label className=\"block text-sm mb-1\">Possui Necessidades Específicas?</label>\r\n+              <label className=\"block text-sm mb-1\">\r\n+                Possui Necessidades Específicas?\r\n+              </label>\r\n               <div className=\"flex gap-4\">\r\n                 <label className=\"flex items-center gap-2\">\r\n                   <input\r\n                     type=\"radio\"\r\n@@ -295,19 +296,22 @@\n             <button\r\n               type=\"submit\"\r\n               disabled={loading}\r\n               className={`w-full bg-green-500 text-white py-2 rounded font-bold transition ${\r\n-                loading ? 'opacity-70 cursor-not-allowed' : 'hover:bg-green-600'\r\n+                loading ? \"opacity-70 cursor-not-allowed\" : \"hover:bg-green-600\"\r\n               }`}\r\n             >\r\n-              {loading ? 'Cadastrando...' : <><FaRegRegistered className=\"inline mr-2\" />Criar Conta</>}\r\n+              {loading ? \"Cadastrando...\" : <><FaRegRegistered className=\"inline mr-2\" />Criar Conta</>}\r\n             </button>\r\n           </form>\r\n \r\n           <div className=\"mt-4 text-center\">\r\n             <p className=\"text-sm\">\r\n               Já tem uma conta?{\" \"}\r\n-              <Link to=\"/login\" className=\"text-green-600 hover:underline font-semibold\">\r\n+              <Link\r\n+                to=\"/login\"\r\n+                className=\"text-green-600 hover:underline font-semibold\"\r\n+              >\r\n                 Voltar ao login\r\n               </Link>\r\n             </p>\r\n           </div>\r\n"
                },
                {
                    "date": 1754574261713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n     senha: \"\",\r\n     confirmarSenha: \"\"\r\n   });\r\n   const [temNecessidade, setTemNecessidade] = useState(false);\r\n-  const [loading, setLoading]         = useState(false);\r\n-  const [error, setError]             = useState(\"\");\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(\"\");\r\n   const [fieldErrors, setFieldErrors] = useState({});\r\n \r\n   const handleInputChange = e => {\r\n     const { name, value } = e.target;\r\n@@ -76,15 +76,11 @@\n       navigate(\"/login\");\r\n     } catch (err) {\r\n       console.error(\"Erro detalhado:\", err);\r\n \r\n-      if (Array.isArray(err.fieldErrors)) {\r\n-        const errs = {};\r\n-        err.fieldErrors.forEach(({ field, message }) => {\r\n-          const key = field === \"data_nasc\" ? \"nascimento\" : field;\r\n-          errs[key] = message;\r\n-        });\r\n-        setFieldErrors(errs);\r\n+      // agora err.fieldErrors é um objeto { campo: mensagem }\r\n+      if (err.fieldErrors && typeof err.fieldErrors === \"object\") {\r\n+        setFieldErrors(err.fieldErrors);\r\n       } else {\r\n         const detailMsg = err.response?.data?.detail?.[0]?.msg;\r\n         setError(detailMsg || err.message || \"Erro ao cadastrar\");\r\n       }\r\n@@ -207,11 +203,9 @@\n                   fieldErrors.nascimento ? \"border-red-500\" : \"\"\r\n                 }`}\r\n               />\r\n               {fieldErrors.nascimento && (\r\n-                <p className=\"text-red-600 text-sm mt-1\">\r\n-                  {fieldErrors.nascimento}\r\n-                </p>\r\n+                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.nascimento}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* Senha */}\r\n@@ -299,9 +293,16 @@\n               className={`w-full bg-green-500 text-white py-2 rounded font-bold transition ${\r\n                 loading ? \"opacity-70 cursor-not-allowed\" : \"hover:bg-green-600\"\r\n               }`}\r\n             >\r\n-              {loading ? \"Cadastrando...\" : <><FaRegRegistered className=\"inline mr-2\" />Criar Conta</>}\r\n+              {loading ? (\r\n+                \"Cadastrando...\"\r\n+              ) : (\r\n+                <>\r\n+                  <FaRegRegistered className=\"inline mr-2\" />\r\n+                  Criar Conta\r\n+                </>\r\n+              )}\r\n             </button>\r\n           </form>\r\n \r\n           <div className=\"mt-4 text-center\">\r\n"
                },
                {
                    "date": 1754574541518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,56 +1,71 @@\n // src/pages/Register.jsx\r\n-import React, { useState } from \"react\";\r\n+import React, { useState, useEffect } from \"react\";\r\n import { useNavigate, Link } from \"react-router-dom\";\r\n import { registerParticipante } from \"../services/participanteService\";\r\n+import { listarOcupacoes }      from \"../services/ocupacaoService\";\r\n import Footer from \"../components/Footer\";\r\n import pattern from \"../assets/pattern.png\";\r\n import logo from \"@/assets/logo.svg\";\r\n import { FaRegRegistered } from \"react-icons/fa6\";\r\n \r\n export default function Register() {\r\n   const navigate = useNavigate();\r\n \r\n+  // estados do form\r\n   const [formData, setFormData] = useState({\r\n     nome: \"\",\r\n     sobrenome: \"\",\r\n     cpf: \"\",\r\n     email: \"\",\r\n-    nascimento: \"\",\r\n-    ocupacao: \"\",\r\n+    data_nasc: \"\",         // note name = data_nasc\r\n+    ocupacao_id: \"\",       // armazenará o ID (string por enquanto)\r\n     senha: \"\",\r\n     confirmarSenha: \"\"\r\n   });\r\n+\r\n+  const [ocupacoes, setOcupacoes]       = useState([]);\r\n   const [temNecessidade, setTemNecessidade] = useState(false);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(\"\");\r\n-  const [fieldErrors, setFieldErrors] = useState({});\r\n+  const [loading, setLoading]           = useState(false);\r\n+  const [error, setError]               = useState(\"\");\r\n+  const [fieldErrors, setFieldErrors]   = useState({});\r\n \r\n+  // carrega ocupações ao montar\r\n+  useEffect(() => {\r\n+    listarOcupacoes()\r\n+      .then(data => setOcupacoes(data))\r\n+      .catch(err => console.error(\"Erro ao listar ocupações:\", err));\r\n+  }, []);\r\n+\r\n   const handleInputChange = e => {\r\n-    const { name, value } = e.target;\r\n+    let { name, value } = e.target;\r\n+    // se for ocupacao_id, converte para número\r\n+    if (name === \"ocupacao_id\") {\r\n+      value = parseInt(value);\r\n+    }\r\n     setFormData(prev => ({ ...prev, [name]: value }));\r\n   };\r\n \r\n-  const formatCPF = value =>\r\n-    value\r\n+  const formatCPF = v =>\r\n+    v\r\n       .replace(/\\D/g, \"\")\r\n       .replace(/(\\d{3})(\\d)/, \"$1.$2\")\r\n       .replace(/(\\d{3})(\\d)/, \"$1.$2\")\r\n       .replace(/(\\d{3})(\\d{1,2})/, \"$1-$2\")\r\n       .replace(/(-\\d{2})\\d+?$/, \"$1\");\r\n \r\n   const handleCPFChange = e => {\r\n-    const { value } = e.target;\r\n-    setFormData(prev => ({ ...prev, cpf: formatCPF(value) }));\r\n+    const cpf = formatCPF(e.target.value);\r\n+    setFormData(prev => ({ ...prev, cpf }));\r\n   };\r\n \r\n   const handleSubmit = async e => {\r\n     e.preventDefault();\r\n     setLoading(true);\r\n     setError(\"\");\r\n     setFieldErrors({});\r\n \r\n-    // Validações client-side\r\n+    // validações client\r\n     if (formData.senha !== formData.confirmarSenha) {\r\n       setError(\"As senhas não coincidem\");\r\n       setLoading(false);\r\n       return;\r\n@@ -66,24 +81,21 @@\n         nome: formData.nome,\r\n         sobrenome: formData.sobrenome,\r\n         cpf: formData.cpf,\r\n         email: formData.email,\r\n+        data_nasc: formData.data_nasc,        // bate com schema\r\n+        ocupacao_id: formData.ocupacao_id,     // número agora\r\n         senha: formData.senha,\r\n-        data_nasc: formData.nascimento,\r\n-        ocupacao_id: formData.ocupacao || 1,\r\n         necessidades_especificas: temNecessidade ? [1] : []\r\n       });\r\n-\r\n       navigate(\"/login\");\r\n     } catch (err) {\r\n       console.error(\"Erro detalhado:\", err);\r\n-\r\n-      // agora err.fieldErrors é um objeto { campo: mensagem }\r\n       if (err.fieldErrors && typeof err.fieldErrors === \"object\") {\r\n         setFieldErrors(err.fieldErrors);\r\n       } else {\r\n-        const detailMsg = err.response?.data?.detail?.[0]?.msg;\r\n-        setError(detailMsg || err.message || \"Erro ao cadastrar\");\r\n+        const msg = err.response?.data?.detail?.[0]?.msg;\r\n+        setError(msg || err.message || \"Erro ao cadastrar\");\r\n       }\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n@@ -100,75 +112,69 @@\n       </div>\r\n \r\n       {/* Conteúdo */}\r\n       <div className=\"flex flex-1 items-center justify-center z-20\">\r\n-        <div className=\"bg-white p-6 md:p-8 rounded-xl shadow-lg w-full max-w-3xl\">\r\n+        <div className=\"bg-white p-6 md:p-8 rounded-xl shadow-lg w-full max-w-md\">\r\n           <div className=\"flex justify-center mb-6\">\r\n-            <img src={logo} alt=\"QRCheck Logo\" className=\"h-8 md:h-10\" />\r\n+            <img src={logo} alt=\"QRCheck Logo\" className=\"h-10\" />\r\n           </div>\r\n \r\n           {error && (\r\n             <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\r\n               {error}\r\n             </div>\r\n           )}\r\n \r\n-          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n+          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n             {/* Nome */}\r\n             <div>\r\n               <label className=\"block text-sm mb-1\">Nome</label>\r\n               <input\r\n-                type=\"text\"\r\n                 name=\"nome\"\r\n                 value={formData.nome}\r\n                 onChange={handleInputChange}\r\n-                required\r\n-                placeholder=\"Digite seu nome\"\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n+                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n                   fieldErrors.nome ? \"border-red-500\" : \"\"\r\n                 }`}\r\n+                placeholder=\"João\"\r\n               />\r\n               {fieldErrors.nome && (\r\n-                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.nome}</p>\r\n+                <p className=\"text-red-600 text-xs\">{fieldErrors.nome}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* Sobrenome */}\r\n             <div>\r\n               <label className=\"block text-sm mb-1\">Sobrenome</label>\r\n               <input\r\n-                type=\"text\"\r\n                 name=\"sobrenome\"\r\n                 value={formData.sobrenome}\r\n                 onChange={handleInputChange}\r\n-                required\r\n-                placeholder=\"Digite seu sobrenome\"\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n+                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n                   fieldErrors.sobrenome ? \"border-red-500\" : \"\"\r\n                 }`}\r\n+                placeholder=\"Silva\"\r\n               />\r\n               {fieldErrors.sobrenome && (\r\n-                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.sobrenome}</p>\r\n+                <p className=\"text-red-600 text-xs\">{fieldErrors.sobrenome}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* CPF */}\r\n             <div>\r\n               <label className=\"block text-sm mb-1\">CPF</label>\r\n               <input\r\n-                type=\"text\"\r\n                 name=\"cpf\"\r\n                 value={formData.cpf}\r\n                 onChange={handleCPFChange}\r\n-                required\r\n+                maxLength=\"14\"\r\n                 placeholder=\"000.000.000-00\"\r\n-                maxLength=\"14\"\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n+                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n                   fieldErrors.cpf ? \"border-red-500\" : \"\"\r\n                 }`}\r\n               />\r\n               {fieldErrors.cpf && (\r\n-                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.cpf}</p>\r\n+                <p className=\"text-red-600 text-xs\">{fieldErrors.cpf}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* Email */}\r\n@@ -178,54 +184,72 @@\n                 type=\"email\"\r\n                 name=\"email\"\r\n                 value={formData.email}\r\n                 onChange={handleInputChange}\r\n-                required\r\n-                placeholder=\"seu@email.com\"\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n+                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n                   fieldErrors.email ? \"border-red-500\" : \"\"\r\n                 }`}\r\n+                placeholder=\"seu@email.com\"\r\n               />\r\n               {fieldErrors.email && (\r\n-                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.email}</p>\r\n+                <p className=\"text-red-600 text-xs\">{fieldErrors.email}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* Data de Nascimento */}\r\n             <div>\r\n               <label className=\"block text-sm mb-1\">Data de Nascimento</label>\r\n               <input\r\n                 type=\"date\"\r\n-                name=\"nascimento\"\r\n-                value={formData.nascimento}\r\n+                name=\"data_nasc\"\r\n+                value={formData.data_nasc}\r\n                 onChange={handleInputChange}\r\n-                required\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n-                  fieldErrors.nascimento ? \"border-red-500\" : \"\"\r\n+                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n+                  fieldErrors.data_nasc ? \"border-red-500\" : \"\"\r\n                 }`}\r\n               />\r\n-              {fieldErrors.nascimento && (\r\n-                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.nascimento}</p>\r\n+              {fieldErrors.data_nasc && (\r\n+                <p className=\"text-red-600 text-xs\">{fieldErrors.data_nasc}</p>\r\n               )}\r\n             </div>\r\n \r\n+            {/* Ocupação */}\r\n+            <div>\r\n+              <label className=\"block text-sm mb-1\">Ocupação</label>\r\n+              <select\r\n+                name=\"ocupacao_id\"\r\n+                value={formData.ocupacao_id}\r\n+                onChange={handleInputChange}\r\n+                className=\"w-full px-4 py-2 rounded bg-green-100 focus:ring-2\"\r\n+              >\r\n+                <option value=\"\">Selecione...</option>\r\n+                {ocupacoes.map(o => (\r\n+                  <option key={o.id} value={o.id}>\r\n+                    {o.nome}\r\n+                  </option>\r\n+                ))}\r\n+              </select>\r\n+              {fieldErrors.ocupacao_id && (\r\n+                <p className=\"text-red-600 text-xs\">{fieldErrors.ocupacao_id}</p>\r\n+              )}\r\n+            </div>\r\n+\r\n             {/* Senha */}\r\n             <div>\r\n               <label className=\"block text-sm mb-1\">Senha</label>\r\n               <input\r\n                 type=\"password\"\r\n                 name=\"senha\"\r\n                 value={formData.senha}\r\n                 onChange={handleInputChange}\r\n-                required\r\n-                minLength=\"6\"\r\n-                placeholder=\"Mínimo 6 caracteres\"\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n+                minLength={6}\r\n+                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n                   fieldErrors.senha ? \"border-red-500\" : \"\"\r\n                 }`}\r\n+                placeholder=\"Mínimo 6 caracteres\"\r\n               />\r\n               {fieldErrors.senha && (\r\n-                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.senha}</p>\r\n+                <p className=\"text-red-600 text-xs\">{fieldErrors.senha}</p>\r\n               )}\r\n             </div>\r\n \r\n             {/* Confirmar Senha */}\r\n@@ -235,88 +259,60 @@\n                 type=\"password\"\r\n                 name=\"confirmarSenha\"\r\n                 value={formData.confirmarSenha}\r\n                 onChange={handleInputChange}\r\n-                required\r\n+                className=\"w-full px-4 py-2 rounded bg-green-100 focus:ring-2\"\r\n                 placeholder=\"Repita a senha\"\r\n-                className=\"w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n               />\r\n             </div>\r\n \r\n-            {/* Ocupação */}\r\n+            {/* Necessidades */}\r\n             <div>\r\n-              <label className=\"block text-sm mb-1\">Ocupação</label>\r\n-              <select\r\n-                name=\"ocupacao\"\r\n-                value={formData.ocupacao}\r\n-                onChange={handleInputChange}\r\n-                required\r\n-                className=\"w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n-              >\r\n-                <option value=\"\">Selecione...</option>\r\n-                <option value=\"estudante\">Estudante</option>\r\n-                <option value=\"professor\">Professor</option>\r\n-                <option value=\"outro\">Outro</option>\r\n-              </select>\r\n-            </div>\r\n-\r\n-            {/* Necessidades Específicas */}\r\n-            <div>\r\n               <label className=\"block text-sm mb-1\">\r\n-                Possui Necessidades Específicas?\r\n+                Necessidades Específicas?\r\n               </label>\r\n               <div className=\"flex gap-4\">\r\n-                <label className=\"flex items-center gap-2\">\r\n+                <label>\r\n                   <input\r\n                     type=\"radio\"\r\n-                    name=\"necessidadesRadio\"\r\n-                    checked={temNecessidade === true}\r\n+                    name=\"necessidades_especificas\"\r\n+                    value=\"true\"\r\n+                    checked={temNecessidade}\r\n                     onChange={() => setTemNecessidade(true)}\r\n-                  />\r\n+                  />{\" \"}\r\n                   Sim\r\n                 </label>\r\n-                <label className=\"flex items-center gap-2\">\r\n+                <label>\r\n                   <input\r\n                     type=\"radio\"\r\n-                    name=\"necessidadesRadio\"\r\n-                    checked={temNecessidade === false}\r\n+                    name=\"necessidades_especificas\"\r\n+                    value=\"false\"\r\n+                    checked={!temNecessidade}\r\n                     onChange={() => setTemNecessidade(false)}\r\n-                  />\r\n+                  />{\" \"}\r\n                   Não\r\n                 </label>\r\n               </div>\r\n             </div>\r\n \r\n-            {/* Botão de Submit */}\r\n+            {/* Submit */}\r\n             <button\r\n               type=\"submit\"\r\n               disabled={loading}\r\n-              className={`w-full bg-green-500 text-white py-2 rounded font-bold transition ${\r\n-                loading ? \"opacity-70 cursor-not-allowed\" : \"hover:bg-green-600\"\r\n+              className={`w-full py-2 rounded font-bold text-white ${\r\n+                loading ? \"bg-green-300 cursor-not-allowed\" : \"bg-green-600 hover:bg-green-700\"\r\n               }`}\r\n             >\r\n-              {loading ? (\r\n-                \"Cadastrando...\"\r\n-              ) : (\r\n-                <>\r\n-                  <FaRegRegistered className=\"inline mr-2\" />\r\n-                  Criar Conta\r\n-                </>\r\n-              )}\r\n+              {loading ? \"Cadastrando...\" : <><FaRegRegistered className=\"inline mr-2\" />Criar Conta</>}\r\n             </button>\r\n           </form>\r\n \r\n-          <div className=\"mt-4 text-center\">\r\n-            <p className=\"text-sm\">\r\n-              Já tem uma conta?{\" \"}\r\n-              <Link\r\n-                to=\"/login\"\r\n-                className=\"text-green-600 hover:underline font-semibold\"\r\n-              >\r\n-                Voltar ao login\r\n-              </Link>\r\n-            </p>\r\n-          </div>\r\n+          <p className=\"mt-4 text-center text-sm\">\r\n+            Já tem conta?{\" \"}\r\n+            <Link to=\"/login\" className=\"text-green-600 hover:underline\">\r\n+              Entrar\r\n+            </Link>\r\n+          </p>\r\n         </div>\r\n       </div>\r\n \r\n       <Footer />\r\n"
                },
                {
                    "date": 1754613460846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // src/pages/Register.jsx\r\n import React, { useState, useEffect } from \"react\";\r\n import { useNavigate, Link } from \"react-router-dom\";\r\n import { registerParticipante } from \"../services/participanteService\";\r\n-import { listarOcupacoes }      from \"../services/ocupacaoService\";\r\n+import { listarOcupacoes } from \"../services/ocupacaoService\";\r\n import Footer from \"../components/Footer\";\r\n import pattern from \"../assets/pattern.png\";\r\n import logo from \"@/assets/logo.svg\";\r\n import { FaRegRegistered } from \"react-icons/fa6\";\r\n@@ -16,19 +16,20 @@\n     nome: \"\",\r\n     sobrenome: \"\",\r\n     cpf: \"\",\r\n     email: \"\",\r\n-    data_nasc: \"\",         // note name = data_nasc\r\n-    ocupacao_id: \"\",       // armazenará o ID (string por enquanto)\r\n+    data_nasc: \"\",\r\n+    ocupacao_id: \"\",\r\n     senha: \"\",\r\n-    confirmarSenha: \"\"\r\n+    confirmarSenha: \"\",\r\n+    necessidades_especificas: [],\r\n   });\r\n \r\n-  const [ocupacoes, setOcupacoes]       = useState([]);\r\n+  const [ocupacoes, setOcupacoes] = useState([]);\r\n   const [temNecessidade, setTemNecessidade] = useState(false);\r\n-  const [loading, setLoading]           = useState(false);\r\n-  const [error, setError]               = useState(\"\");\r\n-  const [fieldErrors, setFieldErrors]   = useState({});\r\n+  const [loading, setLoading] = useState(false);\r\n+  const [error, setError] = useState(\"\");\r\n+  const [fieldErrors, setFieldErrors] = useState({});\r\n \r\n   // carrega ocupações ao montar\r\n   useEffect(() => {\r\n     listarOcupacoes()\r\n@@ -37,11 +38,10 @@\n   }, []);\r\n \r\n   const handleInputChange = e => {\r\n     let { name, value } = e.target;\r\n-    // se for ocupacao_id, converte para número\r\n     if (name === \"ocupacao_id\") {\r\n-      value = parseInt(value);\r\n+      value = parseInt(value, 10);\r\n     }\r\n     setFormData(prev => ({ ...prev, [name]: value }));\r\n   };\r\n \r\n@@ -81,10 +81,10 @@\n         nome: formData.nome,\r\n         sobrenome: formData.sobrenome,\r\n         cpf: formData.cpf,\r\n         email: formData.email,\r\n-        data_nasc: formData.data_nasc,        // bate com schema\r\n-        ocupacao_id: formData.ocupacao_id,     // número agora\r\n+        data_nasc: formData.data_nasc,\r\n+        ocupacao_id: formData.ocupacao_id,\r\n         senha: formData.senha,\r\n         necessidades_especificas: temNecessidade ? [1] : []\r\n       });\r\n       navigate(\"/login\");\r\n@@ -117,8 +117,15 @@\n           <div className=\"flex justify-center mb-6\">\r\n             <img src={logo} alt=\"QRCheck Logo\" className=\"h-10\" />\r\n           </div>\r\n \r\n+          {(formData.nome || formData.sobrenome) && (\r\n+            <div className=\"mb-4 p-3 bg-green-50 text-green-900 rounded text-sm\">\r\n+              Nome completo sugerido:{\" \"}\r\n+              <strong>{`${formData.nome} ${formData.sobrenome}`.trim()}</strong>\r\n+            </div>\r\n+          )}\r\n+\r\n           {error && (\r\n             <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\r\n               {error}\r\n             </div>\r\n"
                },
                {
                    "date": 1754870987217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,328 +1,375 @@\n-// src/pages/Register.jsx\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useNavigate, Link } from \"react-router-dom\";\r\n-import { registerParticipante } from \"../services/participanteService\";\r\n-import { listarOcupacoes } from \"../services/ocupacaoService\";\r\n-import Footer from \"../components/Footer\";\r\n-import pattern from \"../assets/pattern.png\";\r\n-import logo from \"@/assets/logo.svg\";\r\n-import { FaRegRegistered } from \"react-icons/fa6\";\r\n-\r\n-export default function Register() {\r\n-  const navigate = useNavigate();\r\n-\r\n-  // estados do form\r\n-  const [formData, setFormData] = useState({\r\n-    nome: \"\",\r\n-    sobrenome: \"\",\r\n-    cpf: \"\",\r\n-    email: \"\",\r\n-    data_nasc: \"\",\r\n-    ocupacao_id: \"\",\r\n-    senha: \"\",\r\n-    confirmarSenha: \"\",\r\n-    necessidades_especificas: [],\r\n-  });\r\n-\r\n-  const [ocupacoes, setOcupacoes] = useState([]);\r\n-  const [temNecessidade, setTemNecessidade] = useState(false);\r\n-  const [loading, setLoading] = useState(false);\r\n-  const [error, setError] = useState(\"\");\r\n-  const [fieldErrors, setFieldErrors] = useState({});\r\n-\r\n-  // carrega ocupações ao montar\r\n-  useEffect(() => {\r\n-    listarOcupacoes()\r\n-      .then(data => setOcupacoes(data))\r\n-      .catch(err => console.error(\"Erro ao listar ocupações:\", err));\r\n-  }, []);\r\n-\r\n-  const handleInputChange = e => {\r\n-    let { name, value } = e.target;\r\n-    if (name === \"ocupacao_id\") {\r\n-      value = parseInt(value, 10);\r\n-    }\r\n-    setFormData(prev => ({ ...prev, [name]: value }));\r\n-  };\r\n-\r\n-  const formatCPF = v =>\r\n-    v\r\n-      .replace(/\\D/g, \"\")\r\n-      .replace(/(\\d{3})(\\d)/, \"$1.$2\")\r\n-      .replace(/(\\d{3})(\\d)/, \"$1.$2\")\r\n-      .replace(/(\\d{3})(\\d{1,2})/, \"$1-$2\")\r\n-      .replace(/(-\\d{2})\\d+?$/, \"$1\");\r\n-\r\n-  const handleCPFChange = e => {\r\n-    const cpf = formatCPF(e.target.value);\r\n-    setFormData(prev => ({ ...prev, cpf }));\r\n-  };\r\n-\r\n-  const handleSubmit = async e => {\r\n-    e.preventDefault();\r\n-    setLoading(true);\r\n-    setError(\"\");\r\n-    setFieldErrors({});\r\n-\r\n-    // validações client\r\n-    if (formData.senha !== formData.confirmarSenha) {\r\n-      setError(\"As senhas não coincidem\");\r\n-      setLoading(false);\r\n-      return;\r\n-    }\r\n-    if (!formData.nome || !formData.sobrenome) {\r\n-      setError(\"Nome e sobrenome são obrigatórios\");\r\n-      setLoading(false);\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      await registerParticipante({\r\n-        nome: formData.nome,\r\n-        sobrenome: formData.sobrenome,\r\n-        cpf: formData.cpf,\r\n-        email: formData.email,\r\n-        data_nasc: formData.data_nasc,\r\n-        ocupacao_id: formData.ocupacao_id,\r\n-        senha: formData.senha,\r\n-        necessidades_especificas: temNecessidade ? [1] : []\r\n-      });\r\n-      navigate(\"/login\");\r\n-    } catch (err) {\r\n-      console.error(\"Erro detalhado:\", err);\r\n-      if (err.fieldErrors && typeof err.fieldErrors === \"object\") {\r\n-        setFieldErrors(err.fieldErrors);\r\n-      } else {\r\n-        const msg = err.response?.data?.detail?.[0]?.msg;\r\n-        setError(msg || err.message || \"Erro ao cadastrar\");\r\n-      }\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen flex flex-col bg-white relative\">\r\n-      {/* Fundo */}\r\n-      <div className=\"absolute inset-0 z-0\">\r\n-        <div\r\n-          className=\"w-full h-full opacity-90 bg-repeat-y bg-center bg-cover\"\r\n-          style={{ backgroundImage: `url(${pattern})` }}\r\n-        />\r\n-      </div>\r\n-\r\n-      {/* Conteúdo */}\r\n-      <div className=\"flex flex-1 items-center justify-center z-20\">\r\n-        <div className=\"bg-white p-6 md:p-8 rounded-xl shadow-lg w-full max-w-md\">\r\n-          <div className=\"flex justify-center mb-6\">\r\n-            <img src={logo} alt=\"QRCheck Logo\" className=\"h-10\" />\r\n-          </div>\r\n-\r\n-          {(formData.nome || formData.sobrenome) && (\r\n-            <div className=\"mb-4 p-3 bg-green-50 text-green-900 rounded text-sm\">\r\n-              Nome completo sugerido:{\" \"}\r\n-              <strong>{`${formData.nome} ${formData.sobrenome}`.trim()}</strong>\r\n-            </div>\r\n-          )}\r\n-\r\n-          {error && (\r\n-            <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\r\n-              {error}\r\n-            </div>\r\n-          )}\r\n-\r\n-          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n-            {/* Nome */}\r\n-            <div>\r\n-              <label className=\"block text-sm mb-1\">Nome</label>\r\n-              <input\r\n-                name=\"nome\"\r\n-                value={formData.nome}\r\n-                onChange={handleInputChange}\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n-                  fieldErrors.nome ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-                placeholder=\"João\"\r\n-              />\r\n-              {fieldErrors.nome && (\r\n-                <p className=\"text-red-600 text-xs\">{fieldErrors.nome}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            {/* Sobrenome */}\r\n-            <div>\r\n-              <label className=\"block text-sm mb-1\">Sobrenome</label>\r\n-              <input\r\n-                name=\"sobrenome\"\r\n-                value={formData.sobrenome}\r\n-                onChange={handleInputChange}\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n-                  fieldErrors.sobrenome ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-                placeholder=\"Silva\"\r\n-              />\r\n-              {fieldErrors.sobrenome && (\r\n-                <p className=\"text-red-600 text-xs\">{fieldErrors.sobrenome}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            {/* CPF */}\r\n-            <div>\r\n-              <label className=\"block text-sm mb-1\">CPF</label>\r\n-              <input\r\n-                name=\"cpf\"\r\n-                value={formData.cpf}\r\n-                onChange={handleCPFChange}\r\n-                maxLength=\"14\"\r\n-                placeholder=\"000.000.000-00\"\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n-                  fieldErrors.cpf ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {fieldErrors.cpf && (\r\n-                <p className=\"text-red-600 text-xs\">{fieldErrors.cpf}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            {/* Email */}\r\n-            <div>\r\n-              <label className=\"block text-sm mb-1\">Email</label>\r\n-              <input\r\n-                type=\"email\"\r\n-                name=\"email\"\r\n-                value={formData.email}\r\n-                onChange={handleInputChange}\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n-                  fieldErrors.email ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-                placeholder=\"seu@email.com\"\r\n-              />\r\n-              {fieldErrors.email && (\r\n-                <p className=\"text-red-600 text-xs\">{fieldErrors.email}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            {/* Data de Nascimento */}\r\n-            <div>\r\n-              <label className=\"block text-sm mb-1\">Data de Nascimento</label>\r\n-              <input\r\n-                type=\"date\"\r\n-                name=\"data_nasc\"\r\n-                value={formData.data_nasc}\r\n-                onChange={handleInputChange}\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n-                  fieldErrors.data_nasc ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-              />\r\n-              {fieldErrors.data_nasc && (\r\n-                <p className=\"text-red-600 text-xs\">{fieldErrors.data_nasc}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            {/* Ocupação */}\r\n-            <div>\r\n-              <label className=\"block text-sm mb-1\">Ocupação</label>\r\n-              <select\r\n-                name=\"ocupacao_id\"\r\n-                value={formData.ocupacao_id}\r\n-                onChange={handleInputChange}\r\n-                className=\"w-full px-4 py-2 rounded bg-green-100 focus:ring-2\"\r\n-              >\r\n-                <option value=\"\">Selecione...</option>\r\n-                {ocupacoes.map(o => (\r\n-                  <option key={o.id} value={o.id}>\r\n-                    {o.nome}\r\n-                  </option>\r\n-                ))}\r\n-              </select>\r\n-              {fieldErrors.ocupacao_id && (\r\n-                <p className=\"text-red-600 text-xs\">{fieldErrors.ocupacao_id}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            {/* Senha */}\r\n-            <div>\r\n-              <label className=\"block text-sm mb-1\">Senha</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"senha\"\r\n-                value={formData.senha}\r\n-                onChange={handleInputChange}\r\n-                minLength={6}\r\n-                className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\r\n-                  fieldErrors.senha ? \"border-red-500\" : \"\"\r\n-                }`}\r\n-                placeholder=\"Mínimo 6 caracteres\"\r\n-              />\r\n-              {fieldErrors.senha && (\r\n-                <p className=\"text-red-600 text-xs\">{fieldErrors.senha}</p>\r\n-              )}\r\n-            </div>\r\n-\r\n-            {/* Confirmar Senha */}\r\n-            <div>\r\n-              <label className=\"block text-sm mb-1\">Confirme a Senha</label>\r\n-              <input\r\n-                type=\"password\"\r\n-                name=\"confirmarSenha\"\r\n-                value={formData.confirmarSenha}\r\n-                onChange={handleInputChange}\r\n-                className=\"w-full px-4 py-2 rounded bg-green-100 focus:ring-2\"\r\n-                placeholder=\"Repita a senha\"\r\n-              />\r\n-            </div>\r\n-\r\n-            {/* Necessidades */}\r\n-            <div>\r\n-              <label className=\"block text-sm mb-1\">\r\n-                Necessidades Específicas?\r\n-              </label>\r\n-              <div className=\"flex gap-4\">\r\n-                <label>\r\n-                  <input\r\n-                    type=\"radio\"\r\n-                    name=\"necessidades_especificas\"\r\n-                    value=\"true\"\r\n-                    checked={temNecessidade}\r\n-                    onChange={() => setTemNecessidade(true)}\r\n-                  />{\" \"}\r\n-                  Sim\r\n-                </label>\r\n-                <label>\r\n-                  <input\r\n-                    type=\"radio\"\r\n-                    name=\"necessidades_especificas\"\r\n-                    value=\"false\"\r\n-                    checked={!temNecessidade}\r\n-                    onChange={() => setTemNecessidade(false)}\r\n-                  />{\" \"}\r\n-                  Não\r\n-                </label>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            {/* Submit */}\r\n-            <button\r\n-              type=\"submit\"\r\n-              disabled={loading}\r\n-              className={`w-full py-2 rounded font-bold text-white ${\r\n-                loading ? \"bg-green-300 cursor-not-allowed\" : \"bg-green-600 hover:bg-green-700\"\r\n-              }`}\r\n-            >\r\n-              {loading ? \"Cadastrando...\" : <><FaRegRegistered className=\"inline mr-2\" />Criar Conta</>}\r\n-            </button>\r\n-          </form>\r\n-\r\n-          <p className=\"mt-4 text-center text-sm\">\r\n-            Já tem conta?{\" \"}\r\n-            <Link to=\"/login\" className=\"text-green-600 hover:underline\">\r\n-              Entrar\r\n-            </Link>\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      <Footer />\r\n-    </div>\r\n-  );\r\n-}\r\n+// src/pages/Register.jsx\n+import React, { useState, useEffect } from \"react\";\n+import { useNavigate, Link } from \"react-router-dom\";\n+import { registerParticipante } from \"../services/participanteService\";\n+import { listarOcupacoes } from \"../services/ocupacaoService\";\n+import Footer from \"../components/Footer\";\n+import pattern from \"../assets/pattern.png\";\n+import logo from \"@/assets/logo.svg\";\n+import { FaRegRegistered } from \"react-icons/fa6\";\n+\n+export default function Register() {\n+  const navigate = useNavigate();\n+\n+  // estados do form\n+  const [formData, setFormData] = useState({\n+    nome: \"\",\n+    sobrenome: \"\",\n+    cpf: \"\",\n+    email: \"\",\n+    data_nasc: \"\",\n+    ocupacao_id: \"\",\n+    senha: \"\",\n+    confirmarSenha: \"\",\n+    necessidades_especificas: [],\n+  });\n+\n+  const [ocupacoes, setOcupacoes] = useState([]);\n+  const [temNecessidade, setTemNecessidade] = useState(false);\n+  const [loading, setLoading] = useState(false);\n+  const [error, setError] = useState(\"\");\n+  const [fieldErrors, setFieldErrors] = useState({});\n+\n+  // carrega ocupações ao montar\n+  useEffect(() => {\n+    listarOcupacoes()\n+      .then((data) => setOcupacoes(data))\n+      .catch((err) => console.error(\"Erro ao listar ocupações:\", err));\n+  }, []);\n+\n+  const handleInputChange = (e) => {\n+    let { name, value } = e.target;\n+\n+    if (name === \"ocupacao_id\") {\n+      // permite vazio (placeholder) e número para o backend\n+      value = value === \"\" ? \"\" : parseInt(value, 10);\n+    }\n+\n+    setFormData((prev) => ({ ...prev, [name]: value }));\n+  };\n+\n+  const formatCPF = (v) =>\n+    v\n+      .replace(/\\D/g, \"\")\n+      .replace(/(\\d{3})(\\d)/, \"$1.$2\")\n+      .replace(/(\\d{3})(\\d)/, \"$1.$2\")\n+      .replace(/(\\d{3})(\\d{1,2})/, \"$1-$2\")\n+      .replace(/(-\\d{2})\\d+?$/, \"$1\");\n+\n+  const handleCPFChange = (e) => {\n+    const cpf = formatCPF(e.target.value);\n+    setFormData((prev) => ({ ...prev, cpf }));\n+  };\n+\n+  const handleSubmit = async (e) => {\n+    e.preventDefault();\n+    setLoading(true);\n+    setError(\"\");\n+    setFieldErrors({});\n+\n+    // validações client\n+    if (formData.senha !== formData.confirmarSenha) {\n+      setError(\"As senhas não coincidem\");\n+      setLoading(false);\n+      return;\n+    }\n+    if (!formData.nome || !formData.sobrenome) {\n+      setError(\"Nome e sobrenome são obrigatórios\");\n+      setLoading(false);\n+      return;\n+    }\n+\n+    try {\n+      await registerParticipante({\n+        nome: formData.nome,\n+        sobrenome: formData.sobrenome,\n+        cpf: formData.cpf,\n+        email: formData.email,\n+        data_nasc: formData.data_nasc,\n+        ocupacao_id: formData.ocupacao_id || 1, // se seu backend exige default, mantenha; se não, remova o fallback\n+        senha: formData.senha,\n+        necessidades_especificas: temNecessidade ? [1] : [],\n+      });\n+      navigate(\"/login\");\n+    } catch (err) {\n+      console.error(\"Erro detalhado:\", err);\n+      if (err.fieldErrors && typeof err.fieldErrors === \"object\") {\n+        setFieldErrors(err.fieldErrors);\n+      } else {\n+        const msg = err.response?.data?.detail?.[0]?.msg;\n+        setError(msg || err.message || \"Erro ao cadastrar\");\n+      }\n+    } finally {\n+      setLoading(false);\n+    }\n+  };\n+\n+  return (\n+    <div className=\"min-h-screen flex flex-col bg-white relative\">\n+      {/* Fundo */}\n+      <div className=\"absolute inset-0 z-0\">\n+        <div\n+          className=\"w-full h-full opacity-90 bg-repeat-y bg-center bg-cover\"\n+          style={{ backgroundImage: `url(${pattern})` }}\n+        />\n+      </div>\n+\n+      {/* Conteúdo */}\n+      <div className=\"flex flex-1 items-center justify-center z-20 px-4\">\n+        <div className=\"bg-white p-6 md:p-8 rounded-xl shadow-lg w-full max-w-2xl\">\n+          <div className=\"flex justify-center mb-6\">\n+            <img src={logo} alt=\"QRCheck Logo\" className=\"h-10\" />\n+          </div>\n+\n+          {(formData.nome || formData.sobrenome) && (\n+            <div className=\"mb-6 p-3 bg-green-50 text-green-900 rounded text-sm\">\n+              Nome completo sugerido:{\" \"}\n+              <strong>{`${formData.nome} ${formData.sobrenome}`.trim()}</strong>\n+            </div>\n+          )}\n+\n+          {error && (\n+            <div className=\"mb-6 p-3 bg-red-100 text-red-700 rounded\">\n+              {error}\n+            </div>\n+          )}\n+\n+          <form onSubmit={handleSubmit} className=\"space-y-6\">\n+            {/* GRID RESPONSIVO: 1 coluna no mobile, 2 colunas a partir de md */}\n+            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n+              {/* Nome */}\n+              <div>\n+                <label className=\"block text-sm mb-1\" htmlFor=\"nome\">\n+                  Nome\n+                </label>\n+                <input\n+                  id=\"nome\"\n+                  name=\"nome\"\n+                  value={formData.nome}\n+                  onChange={handleInputChange}\n+                  aria-invalid={!!fieldErrors.nome}\n+                  className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\n+                    fieldErrors.nome ? \"border-red-500\" : \"\"\n+                  }`}\n+                  placeholder=\"João\"\n+                />\n+                {fieldErrors.nome && (\n+                  <p className=\"text-red-600 text-xs\">{fieldErrors.nome}</p>\n+                )}\n+              </div>\n+\n+              {/* Sobrenome */}\n+              <div>\n+                <label className=\"block text-sm mb-1\" htmlFor=\"sobrenome\">\n+                  Sobrenome\n+                </label>\n+                <input\n+                  id=\"sobrenome\"\n+                  name=\"sobrenome\"\n+                  value={formData.sobrenome}\n+                  onChange={handleInputChange}\n+                  aria-invalid={!!fieldErrors.sobrenome}\n+                  className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\n+                    fieldErrors.sobrenome ? \"border-red-500\" : \"\"\n+                  }`}\n+                  placeholder=\"Silva\"\n+                />\n+                {fieldErrors.sobrenome && (\n+                  <p className=\"text-red-600 text-xs\">{fieldErrors.sobrenome}</p>\n+                )}\n+              </div>\n+\n+              {/* CPF */}\n+              <div>\n+                <label className=\"block text-sm mb-1\" htmlFor=\"cpf\">\n+                  CPF\n+                </label>\n+                <input\n+                  id=\"cpf\"\n+                  name=\"cpf\"\n+                  value={formData.cpf}\n+                  onChange={handleCPFChange}\n+                  maxLength=\"14\"\n+                  placeholder=\"000.000.000-00\"\n+                  aria-invalid={!!fieldErrors.cpf}\n+                  className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\n+                    fieldErrors.cpf ? \"border-red-500\" : \"\"\n+                  }`}\n+                />\n+                {fieldErrors.cpf && (\n+                  <p className=\"text-red-600 text-xs\">{fieldErrors.cpf}</p>\n+                )}\n+              </div>\n+\n+              {/* Email */}\n+              <div>\n+                <label className=\"block text-sm mb-1\" htmlFor=\"email\">\n+                  Email\n+                </label>\n+                <input\n+                  id=\"email\"\n+                  type=\"email\"\n+                  name=\"email\"\n+                  value={formData.email}\n+                  onChange={handleInputChange}\n+                  aria-invalid={!!fieldErrors.email}\n+                  className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\n+                    fieldErrors.email ? \"border-red-500\" : \"\"\n+                  }`}\n+                  placeholder=\"seu@email.com\"\n+                />\n+                {fieldErrors.email && (\n+                  <p className=\"text-red-600 text-xs\">{fieldErrors.email}</p>\n+                )}\n+              </div>\n+\n+              {/* Data de Nascimento */}\n+              <div>\n+                <label className=\"block text-sm mb-1\" htmlFor=\"data_nasc\">\n+                  Data de Nascimento\n+                </label>\n+                <input\n+                  id=\"data_nasc\"\n+                  type=\"date\"\n+                  name=\"data_nasc\"\n+                  value={formData.data_nasc}\n+                  onChange={handleInputChange}\n+                  aria-invalid={!!fieldErrors.data_nasc}\n+                  className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\n+                    fieldErrors.data_nasc ? \"border-red-500\" : \"\"\n+                  }`}\n+                />\n+                {fieldErrors.data_nasc && (\n+                  <p className=\"text-red-600 text-xs\">{fieldErrors.data_nasc}</p>\n+                )}\n+              </div>\n+\n+              {/* Ocupação */}\n+              <div>\n+                <label className=\"block text-sm mb-1\" htmlFor=\"ocupacao_id\">\n+                  Ocupação\n+                </label>\n+                <select\n+                  id=\"ocupacao_id\"\n+                  name=\"ocupacao_id\"\n+                  value={formData.ocupacao_id}\n+                  onChange={handleInputChange}\n+                  className=\"w-full px-4 py-2 rounded bg-green-100 focus:ring-2\"\n+                >\n+                  <option value=\"\">Selecione...</option>\n+                  {ocupacoes.map((o) => (\n+                    <option key={o.id} value={o.id}>\n+                      {o.nome}\n+                    </option>\n+                  ))}\n+                </select>\n+                {fieldErrors.ocupacao_id && (\n+                  <p className=\"text-red-600 text-xs\">\n+                    {fieldErrors.ocupacao_id}\n+                  </p>\n+                )}\n+              </div>\n+\n+              {/* Senha */}\n+              <div>\n+                <label className=\"block text-sm mb-1\" htmlFor=\"senha\">\n+                  Senha\n+                </label>\n+                <input\n+                  id=\"senha\"\n+                  type=\"password\"\n+                  name=\"senha\"\n+                  value={formData.senha}\n+                  onChange={handleInputChange}\n+                  minLength={6}\n+                  aria-invalid={!!fieldErrors.senha}\n+                  className={`w-full px-4 py-2 rounded bg-green-100 focus:ring-2 ${\n+                    fieldErrors.senha ? \"border-red-500\" : \"\"\n+                  }`}\n+                  placeholder=\"Mínimo 6 caracteres\"\n+                />\n+                {fieldErrors.senha && (\n+                  <p className=\"text-red-600 text-xs\">{fieldErrors.senha}</p>\n+                )}\n+              </div>\n+\n+              {/* Confirmar Senha */}\n+              <div>\n+                <label className=\"block text-sm mb-1\" htmlFor=\"confirmarSenha\">\n+                  Confirme a Senha\n+                </label>\n+                <input\n+                  id=\"confirmarSenha\"\n+                  type=\"password\"\n+                  name=\"confirmarSenha\"\n+                  value={formData.confirmarSenha}\n+                  onChange={handleInputChange}\n+                  className=\"w-full px-4 py-2 rounded bg-green-100 focus:ring-2\"\n+                  placeholder=\"Repita a senha\"\n+                />\n+              </div>\n+\n+              {/* Necessidades (spana 2 colunas no md+) */}\n+              <div className=\"md:col-span-2\">\n+                <label className=\"block text-sm mb-1\">\n+                  Necessidades Específicas?\n+                </label>\n+                <div className=\"flex gap-6\">\n+                  <label className=\"inline-flex items-center gap-2\">\n+                    <input\n+                      type=\"radio\"\n+                      name=\"necessidades_especificas\"\n+                      value=\"true\"\n+                      checked={temNecessidade}\n+                      onChange={() => setTemNecessidade(true)}\n+                    />\n+                    <span>Sim</span>\n+                  </label>\n+                  <label className=\"inline-flex items-center gap-2\">\n+                    <input\n+                      type=\"radio\"\n+                      name=\"necessidades_especificas\"\n+                      value=\"false\"\n+                      checked={!temNecessidade}\n+                      onChange={() => setTemNecessidade(false)}\n+                    />\n+                    <span>Não</span>\n+                  </label>\n+                </div>\n+              </div>\n+            </div>\n+\n+            {/* Submit */}\n+            <button\n+              type=\"submit\"\n+              disabled={loading}\n+              className={`w-full py-2 rounded font-bold text-white ${\n+                loading\n+                  ? \"bg-green-300 cursor-not-allowed\"\n+                  : \"bg-green-600 hover:bg-green-700\"\n+              }`}\n+            >\n+              {loading ? (\n+                \"Cadastrando...\"\n+              ) : (\n+                <>\n+                  <FaRegRegistered className=\"inline mr-2\" />\n+                  Criar Conta\n+                </>\n+              )}\n+            </button>\n+          </form>\n+\n+          <p className=\"mt-4 text-center text-sm\">\n+            Já tem conta?{\" \"}\n+            <Link to=\"/login\" className=\"text-green-600 hover:underline\">\n+              Entrar\n+            </Link>\n+          </p>\n+        </div>\n+      </div>\n+\n+      <Footer />\n+    </div>\n+  );\n+}\n"
                },
                {
                    "date": 1754871314399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,13 +256,14 @@\n                   onChange={handleInputChange}\n                   className=\"w-full px-4 py-2 rounded bg-green-100 focus:ring-2\"\n                 >\n                   <option value=\"\">Selecione...</option>\n-                  {ocupacoes.map((o) => (\n-                    <option key={o.id} value={o.id}>\n-                      {o.nome}\n-                    </option>\n-                  ))}\n+                  <option value=\"2\"> Estudante</option>\n+                  <option value=\"3\"> Professor</option>\n+                  <option value=\"4\"> Empresário</option>\n+                  <option value=\"5\"> Autônomo</option>\n+                  <option value=\"6\"> Trabalho Formal ou Assalariado</option>\n+                  \n                 </select>\n                 {fieldErrors.ocupacao_id && (\n                   <p className=\"text-red-600 text-xs\">\n                     {fieldErrors.ocupacao_id}\n"
                },
                {
                    "date": 1754959976192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,13 @@\n import Footer from \"../components/Footer\";\n import pattern from \"../assets/pattern.png\";\n import logo from \"@/assets/logo.svg\";\n import { FaRegRegistered } from \"react-icons/fa6\";\n+import { useAuth } from \"../context/AuthContext\";\n \n export default function Register() {\n   const navigate = useNavigate();\n+  const { login } = useAuth(); \n \n   // estados do form\n   const [formData, setFormData] = useState({\n     nome: \"\",\n"
                }
            ],
            "date": 1754530574198,
            "name": "Commit-0",
            "content": "// src/pages/Register.jsx\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { registerParticipante } from \"../services/participanteService\";\r\nimport Footer from \"../components/Footer\";\r\nimport pattern from \"../assets/pattern.png\";\r\nimport logo from \"@/assets/logo.svg\";\r\nimport { FaRegRegistered } from \"react-icons/fa6\";\r\n\r\nexport default function Register() {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    nome: \"\",\r\n    sobrenome: \"\",\r\n    cpf: \"\",\r\n    email: \"\",\r\n    nascimento: \"\",\r\n    ocupacao: \"\",\r\n    senha: \"\",\r\n    confirmarSenha: \"\"\r\n  });\r\n  const [temNecessidade, setTemNecessidade] = useState(false);\r\n  const [loading, setLoading]           = useState(false);\r\n  const [error, setError]               = useState(\"\");\r\n  const [fieldErrors, setFieldErrors]   = useState({});\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const formatCPF = value =>\r\n    value\r\n      .replace(/\\D/g, \"\")\r\n      .replace(/(\\d{3})(\\d)/, \"$1.$2\")\r\n      .replace(/(\\d{3})(\\d)/, \"$1.$2\")\r\n      .replace(/(\\d{3})(\\d{1,2})/, \"$1-$2\")\r\n      .replace(/(-\\d{2})\\d+?$/, \"$1\");\r\n\r\n  const handleCPFChange = e => {\r\n    const { value } = e.target;\r\n    setFormData(prev => ({ ...prev, cpf: formatCPF(value) }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setFieldErrors({});\r\n\r\n    // Validações client-side\r\n    if (formData.senha !== formData.confirmarSenha) {\r\n      setError(\"As senhas não coincidem\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (!formData.nome || !formData.sobrenome) {\r\n      setError(\"Nome e sobrenome são obrigatórios\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await registerParticipante({\r\n        nome: formData.nome,\r\n        sobrenome: formData.sobrenome,\r\n        cpf: formData.cpf,\r\n        email: formData.email,\r\n        senha: formData.senha,\r\n        data_nasc: formData.nascimento,\r\n        ocupacao_id: 1,\r\n        necessidades_especificas: temNecessidade ? [1] : []\r\n      });\r\n\r\n      navigate(\"/login\");\r\n    } catch (err) {\r\n      console.error(\"Erro detalhado:\", err);\r\n\r\n      // Se vier fieldErrors do service\r\n      if (Array.isArray(err.fieldErrors)) {\r\n        const errs = {};\r\n        err.fieldErrors.forEach(({ field, message }) => {\r\n          // mapeia field nomes de backend para names do form\r\n          if (field === \"data_nasc\") field = \"nascimento\";\r\n          errs[field] = message;\r\n        });\r\n        setFieldErrors(errs);\r\n      } else {\r\n        // mensagem geral\r\n        setError(err.response?.data?.detail?.[0]?.msg || err.message || \"Erro ao cadastrar\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-white relative\">\r\n      <div className=\"absolute inset-0 z-0\">\r\n        <div\r\n          className=\"w-full h-full opacity-90 bg-repeat-y bg-center bg-cover\"\r\n          style={{ backgroundImage: `url(${pattern})` }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex flex-1 items-center justify-center z-20\">\r\n        <div className=\"bg-white p-6 md:p-8 rounded-xl shadow-lg w-full max-w-3xl\">\r\n          <div className=\"flex justify-center mb-6\">\r\n            <img src={logo} alt=\"QRCheck Logo\" className=\"h-8 md:h-10\" />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {/* Nome */}\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Nome</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"nome\"\r\n                value={formData.nome}\r\n                onChange={handleInputChange}\r\n                required\r\n                placeholder=\"Digite seu nome\"\r\n                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n                  fieldErrors.nome ? \"border-red-500\" : \"\"\r\n                }`}\r\n              />\r\n              {fieldErrors.nome && (\r\n                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.nome}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Sobrenome */}\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Sobrenome</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"sobrenome\"\r\n                value={formData.sobrenome}\r\n                onChange={handleInputChange}\r\n                required\r\n                placeholder=\"Digite seu sobrenome\"\r\n                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n                  fieldErrors.sobrenome ? \"border-red-500\" : \"\"\r\n                }`}\r\n              />\r\n              {fieldErrors.sobrenome && (\r\n                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.sobrenome}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* CPF */}\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">CPF</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"cpf\"\r\n                value={formData.cpf}\r\n                onChange={handleCPFChange}\r\n                required\r\n                placeholder=\"000.000.000-00\"\r\n                maxLength=\"14\"\r\n                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n                  fieldErrors.cpf ? \"border-red-500\" : \"\"\r\n                }`}\r\n              />\r\n              {fieldErrors.cpf && (\r\n                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.cpf}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Email */}\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                required\r\n                placeholder=\"seu@email.com\"\r\n                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n                  fieldErrors.email ? \"border-red-500\" : \"\"\r\n                }`}\r\n              />\r\n              {fieldErrors.email && (\r\n                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.email}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Data de Nascimento */}\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Data de Nascimento</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"nascimento\"\r\n                value={formData.nascimento}\r\n                onChange={handleInputChange}\r\n                required\r\n                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n                  fieldErrors.nascimento ? \"border-red-500\" : \"\"\r\n                }`}\r\n              />\r\n              {fieldErrors.nascimento && (\r\n                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.nascimento}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Senha */}\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Senha</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"senha\"\r\n                value={formData.senha}\r\n                onChange={handleInputChange}\r\n                required\r\n                minLength=\"6\"\r\n                placeholder=\"Mínimo 6 caracteres\"\r\n                className={`w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500 ${\r\n                  fieldErrors.senha ? \"border-red-500\" : \"\"\r\n                }`}\r\n              />\r\n              {fieldErrors.senha && (\r\n                <p className=\"text-red-600 text-sm mt-1\">{fieldErrors.senha}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Confirmar Senha */}\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Confirme a Senha</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmarSenha\"\r\n                value={formData.confirmarSenha}\r\n                onChange={handleInputChange}\r\n                required\r\n                placeholder=\"Repita a senha\"\r\n                className=\"w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n              />\r\n            </div>\r\n\r\n            {/* Ocupação */}\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Ocupação</label>\r\n              <select\r\n                name=\"ocupacao\"\r\n                value={formData.ocupacao}\r\n                onChange={e => {\r\n                  handleInputChange(e);\r\n                  setOcupacao(e.target.value);\r\n                }}\r\n                required\r\n                className=\"w-full px-4 py-2 rounded bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n              >\r\n                <option value=\"\">Selecione...</option>\r\n                <option value=\"estudante\">Estudante</option>\r\n                <option value=\"professor\">Professor</option>\r\n                <option value=\"outro\">Outro</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Necessidades Específicas */}\r\n            <div>\r\n              <label className=\"block text-sm mb-1\">Possui Necessidades Específicas?</label>\r\n              <div className=\"flex gap-4\">\r\n                <label className=\"flex items-center gap-2\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"necessidadesRadio\"\r\n                    checked={temNecessidade === true}\r\n                    onChange={() => setTemNecessidade(true)}\r\n                  />\r\n                  Sim\r\n                </label>\r\n                <label className=\"flex items-center gap-2\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"necessidadesRadio\"\r\n                    checked={temNecessidade === false}\r\n                    onChange={() => setTemNecessidade(false)}\r\n                  />\r\n                  Não\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Botão de Submit */}\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className={`w-full bg-green-500 text-white py-2 rounded font-bold transition ${\r\n                loading ? 'opacity-70 cursor-not-allowed' : 'hover:bg-green-600'\r\n              }`}\r\n            >\r\n              {loading ? 'Cadastrando...' : <><FaRegRegistered className=\"inline mr-2\" />Criar Conta</>}\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"mt-4 text-center\">\r\n            <p className=\"text-sm\">\r\n              Já tem uma conta?{\" \"}\r\n              <Link to=\"/login\" className=\"text-green-600 hover:underline font-semibold\">\r\n                Voltar ao login\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}